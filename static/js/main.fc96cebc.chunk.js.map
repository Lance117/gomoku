{"version":3,"sources":["index.js"],"names":["Square","props","name","status","isWinner","className","onClick","value","Board","state","squares","Array","fill","xIsNext","winner","i","this","slice","setState","calculateWinner","includes","handleClick","board","row","j","push","renderSquare","renderBoard","React","Component","Game","lines","res","col1","col2","row1","row2","calculateLines","length","a","b","c","d","e","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fc96cebc.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n    let name = props.status ? 'square ' + props.status : 'square unclicked';\n    if (props.isWinner) name = name + ' is-winner';\n    return (\n        <button className={name} onClick={() => props.onClick()}>\n            {props.value}\n        </button>\n    );\n}\n\nclass Board extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            squares: Array(225).fill(null),\n            xIsNext: true,\n            winner: null,\n        };\n    }\n\n    handleClick(i) {\n        const squares = this.state.squares.slice();\n        if (this.state.winner || squares[i]) {\n            return;\n        }\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\n        this.setState({\n            squares: squares,\n            xIsNext: !this.state.xIsNext,\n            winner: calculateWinner(squares),\n        });\n    }\n\n    renderSquare(i) {\n        return (\n            <Square\n                value={this.state.squares[i]}\n                status={!!this.state.squares[i] ? 'clicked-' + this.state.squares[i] : null}\n                isWinner={this.state.winner && this.state.winner[1].includes(i)}\n                onClick={() => this.handleClick(i)}\n            />\n        );\n    }\n\n    renderBoard() {\n        const board = [];\n        for (let i = 0; i < 15; i++) {\n            let row = [];\n            for (let j = i * 15; j < 15 * (i + 1); j++) {\n                row.push(this.renderSquare(j));\n            }\n            board.push(<div className=\"board-row\">{row}</div>);\n        }\n        return board;\n    }\n\n    render() {\n        let status;\n        if (this.state.winner) {\n            status = 'Winner: ' + this.state.winner[0];\n        } else {\n            status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n        }\n\n        return (\n            <div>\n                <div className=\"status\">{status}</div>\n                {this.renderBoard()}\n            </div>\n        );\n    }\n}\n\nclass Game extends React.Component {\n    render() {\n        return (\n            <div className=\"game\">\n                <div className=\"game-board\">\n                    <Board />\n                </div>\n                <div className=\"game-info\">\n                    <div>{/* status */}</div>\n                    <ol>{/* TODO */}</ol>\n                </div>\n            </div>\n        );\n    }\n}\n\n// ========================================\n\nReactDOM.render(\n    <Game />,\n    document.getElementById('root')\n);\n\nfunction calculateLines() {\n    const res = [];\n    for (let i = 0; i < 15; i++) {\n        // get winning row lines\n        for (let j = i * 15; j <= i * 15 + 10; j++) {\n            res.push([j, j+1, j+2, j+3, j+4]);\n        }\n        // get winning col lines\n        for (let j = i; j <= i + 150; j += 15) {\n            res.push([j, j+15, j+30, j+45, j+60]);\n        }\n        // get winning diag lines\n        for (let j = 0; j <= 11 - i; j++) {\n            let col1 = i + 16 * j;\n            res.push([col1, col1+16, col1+32, col1+48, col1+64]);\n            let col2 = 14 * (j + 1) - i;\n            res.push([col2, col2+14, col2+28, col2+42, col2+56]);\n            let row1 = 15 * i + 16 * j;\n            res.push([row1, row1+16, row1+32, row1+48, row1+64]);\n            let row2 = 15 * i + 14 * (j + 1);\n            res.push([row2, row2+14, row2+28, row2+42, row2+56]);\n        }\n    }\n    return res;\n}\n\nfunction calculateWinner(squares) {\n    const lines = calculateLines();\n    for (let i = 0; i < lines.length; i++) {\n        const [a, b, c, d, e] = lines[i];\n        if (\n            squares[a] &&\n            squares[a] === squares[b] &&\n            squares[a] === squares[c] &&\n            squares[a] === squares[d] &&\n            squares[a] === squares[e]\n        ) {\n            return [squares[a], lines[i]];\n        }\n    }\n    return null;\n}"],"sourceRoot":""}